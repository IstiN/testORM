package com.epam.testorm.greenDao.model;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.epam.testorm.greenDao.model.News;
import com.epam.testorm.greenDao.model.Author;
import com.epam.testorm.greenDao.model.Content;
import com.epam.testorm.greenDao.model.Images;
import com.epam.testorm.greenDao.model.Links;
import com.epam.testorm.greenDao.model.Videos;
import com.epam.testorm.greenDao.model.Audios;

import com.epam.testorm.greenDao.model.NewsDao;
import com.epam.testorm.greenDao.model.AuthorDao;
import com.epam.testorm.greenDao.model.ContentDao;
import com.epam.testorm.greenDao.model.ImagesDao;
import com.epam.testorm.greenDao.model.LinksDao;
import com.epam.testorm.greenDao.model.VideosDao;
import com.epam.testorm.greenDao.model.AudiosDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig newsDaoConfig;
    private final DaoConfig authorDaoConfig;
    private final DaoConfig contentDaoConfig;
    private final DaoConfig imagesDaoConfig;
    private final DaoConfig linksDaoConfig;
    private final DaoConfig videosDaoConfig;
    private final DaoConfig audiosDaoConfig;

    private final NewsDao newsDao;
    private final AuthorDao authorDao;
    private final ContentDao contentDao;
    private final ImagesDao imagesDao;
    private final LinksDao linksDao;
    private final VideosDao videosDao;
    private final AudiosDao audiosDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        newsDaoConfig = daoConfigMap.get(NewsDao.class).clone();
        newsDaoConfig.initIdentityScope(type);

        authorDaoConfig = daoConfigMap.get(AuthorDao.class).clone();
        authorDaoConfig.initIdentityScope(type);

        contentDaoConfig = daoConfigMap.get(ContentDao.class).clone();
        contentDaoConfig.initIdentityScope(type);

        imagesDaoConfig = daoConfigMap.get(ImagesDao.class).clone();
        imagesDaoConfig.initIdentityScope(type);

        linksDaoConfig = daoConfigMap.get(LinksDao.class).clone();
        linksDaoConfig.initIdentityScope(type);

        videosDaoConfig = daoConfigMap.get(VideosDao.class).clone();
        videosDaoConfig.initIdentityScope(type);

        audiosDaoConfig = daoConfigMap.get(AudiosDao.class).clone();
        audiosDaoConfig.initIdentityScope(type);

        newsDao = new NewsDao(newsDaoConfig, this);
        authorDao = new AuthorDao(authorDaoConfig, this);
        contentDao = new ContentDao(contentDaoConfig, this);
        imagesDao = new ImagesDao(imagesDaoConfig, this);
        linksDao = new LinksDao(linksDaoConfig, this);
        videosDao = new VideosDao(videosDaoConfig, this);
        audiosDao = new AudiosDao(audiosDaoConfig, this);

        registerDao(News.class, newsDao);
        registerDao(Author.class, authorDao);
        registerDao(Content.class, contentDao);
        registerDao(Images.class, imagesDao);
        registerDao(Links.class, linksDao);
        registerDao(Videos.class, videosDao);
        registerDao(Audios.class, audiosDao);
    }
    
    public void clear() {
        newsDaoConfig.getIdentityScope().clear();
        authorDaoConfig.getIdentityScope().clear();
        contentDaoConfig.getIdentityScope().clear();
        imagesDaoConfig.getIdentityScope().clear();
        linksDaoConfig.getIdentityScope().clear();
        videosDaoConfig.getIdentityScope().clear();
        audiosDaoConfig.getIdentityScope().clear();
    }

    public NewsDao getNewsDao() {
        return newsDao;
    }

    public AuthorDao getAuthorDao() {
        return authorDao;
    }

    public ContentDao getContentDao() {
        return contentDao;
    }

    public ImagesDao getImagesDao() {
        return imagesDao;
    }

    public LinksDao getLinksDao() {
        return linksDao;
    }

    public VideosDao getVideosDao() {
        return videosDao;
    }

    public AudiosDao getAudiosDao() {
        return audiosDao;
    }

}
